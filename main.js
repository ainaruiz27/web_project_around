!function(){"use strict";document.querySelector("#image-popup");var t={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inputErrorClass:"form__input_type_error",errorClass:"error-message",submitButtonState:{disabledClass:"your-submit-button-disabled-class"}},e=document.querySelector(".profile__avatar"),n=document.querySelector(".profile__overlay-button");function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,i(r.key),r)}}function i(t){var e=function(t,e){if("object"!=r(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!=r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==r(e)?e:String(e)}var u=function(){function t(e,n,r,o,i,u,a,c,l){var s=c._id,f=c.likes,p=c.owner,y=c.createAt;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._link=e,this._title=n,this._selector=r,this._handleCardClick=o,this._handleLike=i,this._handleRemoveLike=u,this._handleDeleteCard=a,this._id=s,this._likes=f,this._owner=p,this._createdAt=y,this._user=l}var e,n;return e=t,(n=[{key:"_getTemplate",value:function(){var t=document.querySelector(this._selector).content.querySelector(".card").cloneNode(!0),e=t.querySelector(".card__image"),n=t.querySelector(".card__text"),r=t.querySelector(".card__like"),o=t.querySelector(".card__counter"),i=t.querySelector(".card__trash-icon");return n.textContent=this._title,e.src=this._link,e.alt=this._title,this.hasOwnerLike()&&r.classList.add("card__like_active"),o.textContent=this._likes.length,this._owner._id!==this._user._id&&(i.style.display="none"),t}},{key:"_setEventListeners",value:function(t){var e=this;t.querySelector(".card__image").addEventListener("click",(function(t){e._handleCardClick(e._link,e._title)}));var n=t.querySelector(".card__like"),r=t.querySelector(".card__counter"),o=t.querySelector(".card__trash-icon");n.addEventListener("click",(function(t){e.hasOwnerLike()?e._handleRemoveLike(e._id).then((function(t){e._likes=t.likes,n.classList.remove("card__like_active"),r.textContent=e._likes.length})):e._handleLike(e._id).then((function(t){e._likes=t.likes,n.classList.add("card__like_active"),r.textContent=e._likes.length}))})),o.addEventListener("click",(function(n){e._handleDeleteCard(e._id,t)}))}},{key:"hasOwnerLike",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._user._id}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(this._element),this._element}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,l(r.key),r)}}function l(t){var e=function(t,e){if("object"!=a(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==a(e)?e:String(e)}var s=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._formElement=n,this._inputList=Array.from(n.querySelectorAll(this._config.inputSelector)),this._buttonElement=n.querySelector(this._config.submitButtonSelector),this._inputErrorClass=this._config.inputErrorClass,this._errorClass=this._config.errorClass,this._submitButtonState=this._config.submitButtonState,this._setEventListeners()}var e,n;return e=t,(n=[{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._handleInput(e)}))})),this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._toggleButtonState()}},{key:"_handleInput",value:function(t){this._checkInputValidity(t),this._toggleButtonState()}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_showInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._submitButtonState.disabledClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._submitButtonState.disabledClass),this._buttonElement.disabled=!1)}},{key:"enableValidation",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._handleInput(e)}))})),this._toggleButtonState()}}])&&c(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,y(r.key),r)}}function y(t){var e=function(t,e){if("object"!=f(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==f(e)?e:String(e)}var v=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".popup__close-icon"),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("visible"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("visible"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._closeButton.addEventListener("click",(function(){return t.close()})),this._popup.addEventListener("click",(function(e){e.target.classList.contains("overlay")&&t.close()}))}}])&&p(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,h(r.key),r)}}function h(t){var e=function(t,e){if("object"!=m(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==m(e)?e:String(e)}function d(t,e,n){return e=g(e),function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,_()?Reflect.construct(e,n||[],g(t).constructor):e.apply(t,n))}function _(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(_=function(){return!!t})()}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=g(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},S.apply(this,arguments)}function g(t){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},g(t)}function w(t,e){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},w(t,e)}var k=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=d(this,e,[t]))._image=n._popup.querySelector(".popup__image"),n._caption=n._popup.querySelector(".popup__image-title"),n}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&w(t,e)}(e,t),n=e,(r=[{key:"open",value:function(t){var n=t.src,r=t.alt;this._image.src=n,this._image.alt=r,this._caption.textContent=r,S(g(e.prototype),"open",this).call(this)}}])&&b(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(v);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,O(r.key),r)}}function O(t){var e=function(t,e){if("object"!=E(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==E(e)?e:String(e)}var C=function(){function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var e,n;return e=t,n=[{key:"render",value:function(){var t=this;this._items.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){arguments.length>1&&void 0!==arguments[1]&&!arguments[1]?this._container.prepend(t):this._container.append(t)}}],n&&j(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function L(t){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},L(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,T(r.key),r)}}function T(t){var e=function(t,e){if("object"!=L(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==L(e)?e:String(e)}var q=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=n,this._jobElement=r,this._avatarElement=o}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.job;this._nameElement.textContent=e,this._jobElement.textContent=n}},{key:"setAvatar",value:function(t){this._avatarElement.src=t}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,R(r.key),r)}}function R(t){var e=function(t,e){if("object"!=B(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==B(e)?e:String(e)}function x(t,e,n){return e=U(e),function(t,e){if(e&&("object"===B(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,A()?Reflect.construct(e,n||[],U(t).constructor):e.apply(t,n))}function A(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(A=function(){return!!t})()}function D(){return D="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=U(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},D.apply(this,arguments)}function U(t){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},U(t)}function V(t,e){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},V(t,e)}var z=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=x(this,e,[t]))._submitCallback=n,r._form=r._popup.querySelector(".form"),r._inputList=r._form.querySelectorAll(".form__input"),r._submitButton=r._form.querySelector(".form__button"),r}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&V(t,e)}(e,t),n=e,(r=[{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setEventListeners",value:function(){var t=this;D(U(e.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._submitButton.textContent="Guardando...",t._submitCallback(t._getInputValues()).finally((function(){t._submitButton.textContent="Guardar",t.close()}))}))}},{key:"close",value:function(){D(U(e.prototype),"close",this).call(this),this._form.reset()}}])&&I(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(v);function N(t){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},N(t)}function G(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,J(r.key),r)}}function J(t){var e=function(t,e){if("object"!=N(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==N(e)?e:String(e)}var H=new(function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._url=e,this._token=n}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return fetch(this._url+"/users/me",{headers:{Authorization:this._token}}).then((function(t){return t.json()}))}},{key:"getCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(t){return t.json()}))}},{key:"updateUser",value:function(t){var e=t.name,n=void 0===e?null:e,r=t.about,o=void 0===r?null:r,i=t.avatar,u=void 0===i?null:i,a={};return u?a.avatar=u:(a.name=n,a.about=o),fetch("".concat(this._url,"/users/me").concat(u?"/avatar":""),{headers:{authorization:this._token,"Content-Type":"application/json"},method:"PATCH",body:JSON.stringify(a)}).then((function(t){return t.json()}))}},{key:"addCard",value:function(t,e){return fetch("".concat(this._url,"/cards"),{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"POST",body:JSON.stringify({name:e,link:t})}).then((function(t){return t.json()}))}},{key:"deleteCard",value:function(t){return fetch(this._url+"/cards/"+t,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"DELETE"}).then((function(t){return t.json()}))}},{key:"addLike",value:function(t){return fetch(this._url+"/cards/likes/"+t,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"PUT"}).then((function(t){return t.json()}))}},{key:"removeLike",value:function(t){return fetch(this._url+"/cards/likes/"+t,{headers:{Authorization:this._token,"Content-Type":"application/json"},method:"DELETE"}).then((function(t){return t.json()}))}}])&&G(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}())("https://around.nomoreparties.co/v1/web_es_11","e261a8b3-b4ff-46a8-9ab6-ef7a9f75bcee");function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function F(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,K(r.key),r)}}function K(t){var e=function(t,e){if("object"!=M(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==M(e)?e:String(e)}function Q(t,e,n){return e=Y(e),function(t,e){if(e&&("object"===M(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,W()?Reflect.construct(e,n||[],Y(t).constructor):e.apply(t,n))}function W(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(W=function(){return!!t})()}function X(){return X="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Y(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},X.apply(this,arguments)}function Y(t){return Y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Y(t)}function Z(t,e){return Z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},Z(t,e)}var $=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=Q(this,e,[t]))._confirmButton=r._popup.querySelector(".popup__confirm-button"),r}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&Z(t,e)}(e,t),n=e,(r=[{key:"setEventListeners",value:function(){var t=this;X(Y(e.prototype),"setEventListeners",this).call(this),this._confirmButton.addEventListener("click",(function(){t._handleConfirm(),t.close()}))}},{key:"open",value:function(t){X(Y(e.prototype),"open",this).call(this),this._handleConfirm=t}}])&&F(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}(v),tt=document.querySelector(".form.form_profile"),et=document.querySelector(".profile__info-editbutton"),nt=document.querySelector(".profile__addbutton"),rt=document.querySelector("#name"),ot=document.querySelector("#profession"),it=document.querySelector(".form.form_place"),ut=document.querySelector(".form_edit-avatar"),at=document.querySelector(".profile__info-name"),ct=document.querySelector(".profile__info-work"),lt=new k("#image-popup"),st=new z("#profile__popup",(function(t){var e=t.name,n=t.about;return H.updateUser({about:n,name:e}).then((function(t){pt.setUserInfo({name:e,job:n})}))})),ft=new z("#add__popup",(function(t){var e=t.title,n=t.link;return H.addCard(n,e).then((function(t){var r=new u(n,e,".template-card",(function(t,e){lt.open({src:t,alt:e})}),(function(t){return H.addLike(t)}),(function(t){return H.removeLike(t)}),(function(t){return H.deleteCard(t)}),t,bt);mt.addItem(r.generateCard(),!1)}))})),pt=new q({nameSelector:at,jobSelector:ct,avatarSelector:e}),yt=new $("#confirmation-popup"),vt=new z("#edit-avatar-popup",(function(t){var e=t.newAvatarLink;return H.updateUser({avatar:e}).then((function(){pt.setAvatar(e)}))}));lt.setEventListeners(),st.setEventListeners(),ft.setEventListeners(),yt.setEventListeners(),vt.setEventListeners();var mt=null,bt=null;H.getUserInfo().then((function(t){bt=t,pt.setUserInfo({name:t.name,job:t.about}),pt.setAvatar(t.avatar),H.getCards().then((function(t){(mt=new C({items:t,renderer:function(t){var e=new u(t.link,t.name,".template-card",(function(t,e){lt.open({src:t,alt:e})}),(function(t){return H.addLike(t)}),(function(t){return H.removeLike(t)}),(function(t,e){yt.open((function(){H.deleteCard(t).then((function(){e.remove()})),H.getCards()}))}),t,bt);mt.addItem(e.generateCard())}},".elements")).render()}))})),et.addEventListener("click",(function(){st.open(),rt.value=at.textContent.trim(),ot.value=ct.textContent.trim()})),nt.addEventListener("click",(function(){ft.open()})),n.addEventListener("click",(function(){vt.open()})),new s(t,tt).enableValidation(),new s(t,it).enableValidation(),new s(t,ut).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,